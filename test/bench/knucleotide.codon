import sys, time
from bio import *

def pad(x, n, w):
  s = str(x)
  if len(s) < n:
    return s + (w * (n - len(s)))
  return s

def hashcnt(s: seq, K: Static[int]):
  d = {}
  for k in s.kmers(1, k=K):
    d[k] = d.get(k, 0) + 1
  return d

def cnt(s: seq, q: Kmer[K], K: Static[int]):
  d = hashcnt(s, K=K)
  print str(d.get(q, 0)) + "\t" + str(q)

def freq(s: seq):
  d1 = hashcnt(s, K=1)
  for k, v in sorted(d1.items(), lambda a: -a[1]):
    print k, pad(round((100.0 * v) / len(s), 3), 6, '0')
  print

  d2 = hashcnt(s, K=2)
  for k, v in sorted(d2.items(), lambda a: -a[1]):
    print k, pad(round((100.0 * v) / (len(s)-1), 3), 5, '0')
  print

def process(sq):
  freq(sq)
  cnt(sq, Kmer[3](s'GGT'))
  cnt(sq, Kmer[4](s'GGTA'))
  cnt(sq, Kmer[6](s'GGTATT'))
  cnt(sq, Kmer[12](s'GGTATTTTAATT'))
  cnt(sq, Kmer[18](s'GGTATTTTAATTTATAGT'))

t = time.time()
for line in sys.stdin:
  if line[:6] == '>THREE':
    l = list[str]()
    for line in sys.stdin:
      if line[0] == '>': break
      l.append(line)
    s = seq(str.cat(l))
    process(s)
    break
